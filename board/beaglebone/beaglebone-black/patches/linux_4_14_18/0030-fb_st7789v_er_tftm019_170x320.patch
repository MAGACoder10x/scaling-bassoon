Index: linux-4.14.18/drivers/staging/fbtft/fb_st7789v.c
===================================================================
--- linux-4.14.18.orig/drivers/staging/fbtft/fb_st7789v.c
+++ linux-4.14.18/drivers/staging/fbtft/fb_st7789v.c
@@ -16,6 +16,7 @@
 
 #include <linux/bitops.h>
 #include <linux/delay.h>
+#include <linux/gpio.h>
 #include <linux/init.h>
 #include <linux/kernel.h>
 #include <linux/module.h>
@@ -29,6 +30,12 @@
 	"70 2C 2E 15 10 09 48 33 53 0B 19 18 20 25\n" \
 	"70 2C 2E 15 10 09 48 33 53 0B 19 18 20 25"
 
+#define HSD20_IPS_GAMMA \
+	"D0 05 0A 09 08 05 2E 44 45 0F 17 16 2B 33\n" \
+	"D0 05 0A 09 08 05 2E 43 45 0F 16 16 2B 33"
+
+#define HSD20_IPS 1
+
 /**
  * enum st7789v_command - ST7789V display controller commands
  *
@@ -69,6 +76,54 @@ enum st7789v_command {
 #define MADCTL_MX BIT(6) /* bitmask for column address order */
 #define MADCTL_MY BIT(7) /* bitmask for page address order */
 
+#define TFT_WIDTH 170
+#define TFT_HEIGHT 320
+
+static void reset(struct fbtft_par* par)
+{
+	//reset sequence for ER
+	gpio_set_value(par->gpio.reset, 1);
+	mdelay(10);;
+	gpio_set_value(par->gpio.reset, 0);
+	mdelay(10);
+	gpio_set_value(par->gpio.reset, 1);
+}
+
+static void er_set_addr_win(struct fbtft_par *par, int xs, int ys,
+				     int xe, int ye)
+{
+	switch (par->info->var.rotate) {
+	case 0:
+		//set the column address 0x2A
+		write_reg(par, MIPI_DCS_SET_COLUMN_ADDRESS, 0, 35, (TFT_WIDTH-1) >> 8, TFT_WIDTH+34);
+		//set the row address 0x2B
+		write_reg(par, MIPI_DCS_SET_PAGE_ADDRESS, 0, 0, ((TFT_HEIGHT-1) >> 8)& 0xFF, ((TFT_HEIGHT-1)& 0xFF));
+		break;
+	case 90:
+		//set the column address 0x2A
+		write_reg(par, MIPI_DCS_SET_COLUMN_ADDRESS, 0, 0, (TFT_HEIGHT-1) >> 8, TFT_HEIGHT);
+		//set the row address 0x2B
+		write_reg(par, MIPI_DCS_SET_PAGE_ADDRESS, 0, 35, ((TFT_WIDTH-1) >> 8)& 0xFF, ((TFT_WIDTH+34)& 0xFF));
+		break;
+	case 180:
+		//set the column address 0x2A --TODO - not an orientation we use
+		write_reg(par, MIPI_DCS_SET_COLUMN_ADDRESS, 0, 35, (TFT_WIDTH-1) >> 8, TFT_WIDTH+34);
+		//set the row address 0x2B
+		write_reg(par, MIPI_DCS_SET_PAGE_ADDRESS, 0, 0, ((TFT_HEIGHT-1) >> 8)& 0xFF, ((TFT_HEIGHT-1)& 0xFF));
+		break;
+	case 270:
+		//set the column address 0x2A
+		write_reg(par, MIPI_DCS_SET_COLUMN_ADDRESS, 0, 0, (TFT_HEIGHT-1) >> 8, TFT_HEIGHT);
+		//set the row address 0x2B
+		write_reg(par, MIPI_DCS_SET_PAGE_ADDRESS, 0, 35, ((TFT_WIDTH-1) >> 8)& 0xFF, ((TFT_WIDTH+34)& 0xFF));
+		break;
+	default:
+		par->info->var.rotate = 270;
+	};
+
+	write_reg(par, MIPI_DCS_WRITE_MEMORY_START);
+}
+
 /**
  * init_display() - initialize the display controller
  *
@@ -85,20 +140,30 @@ enum st7789v_command {
  */
 static int init_display(struct fbtft_par *par)
 {
+	/* reset the device */
+	reset(par);
+
+
 	/* turn off sleep mode */
 	write_reg(par, MIPI_DCS_EXIT_SLEEP_MODE);
 	mdelay(120);
 
 	/* set pixel format to RGB-565 */
 	write_reg(par, MIPI_DCS_SET_PIXEL_FORMAT, MIPI_DCS_PIXEL_FMT_16BIT);
+	if (HSD20_IPS)
+		write_reg(par, PORCTRL, 0x05, 0x05, 0x00, 0x33, 0x33);
 
-	write_reg(par, PORCTRL, 0x08, 0x08, 0x00, 0x22, 0x22);
+	else
+		write_reg(par, PORCTRL, 0x08, 0x08, 0x00, 0x22, 0x22);
 
 	/*
 	 * VGH = 13.26V
 	 * VGL = -10.43V
 	 */
-	write_reg(par, GCTRL, 0x35);
+	if (HSD20_IPS)
+		write_reg(par, GCTRL, 0x75);
+	else
+		write_reg(par, GCTRL, 0x35);
 
 	/*
 	 * VDV and VRH register values come from command write
@@ -110,13 +175,19 @@ static int init_display(struct fbtft_par
 	 * VAP =  4.1V + (VCOM + VCOM offset + 0.5 * VDV)
 	 * VAN = -4.1V + (VCOM + VCOM offset + 0.5 * VDV)
 	 */
-	write_reg(par, VRHS, 0x0B);
+	if (HSD20_IPS)
+		write_reg(par, VRHS, 0x13);
+	else
+		write_reg(par, VRHS, 0x0B);
 
 	/* VDV = 0V */
 	write_reg(par, VDVS, 0x20);
 
 	/* VCOM = 0.9V */
-	write_reg(par, VCOMS, 0x20);
+	if (HSD20_IPS)
+		write_reg(par, VCOMS, 0x22);
+	else
+		write_reg(par, VCOMS, 0x20);;
 
 	/* VCOM offset = 0V */
 	write_reg(par, VCMOFSET, 0x20);
@@ -129,6 +200,10 @@ static int init_display(struct fbtft_par
 	write_reg(par, PWCTRL1, 0xA4, 0xA1);
 
 	write_reg(par, MIPI_DCS_SET_DISPLAY_ON);
+
+	if (HSD20_IPS)
+		write_reg(par, MIPI_DCS_ENTER_INVERT_MODE);
+
 	return 0;
 }
 
@@ -250,6 +325,8 @@ static struct fbtft_display display = {
 		.set_var = set_var,
 		.set_gamma = set_gamma,
 		.blank = blank,
+		.reset = reset,
+		.set_addr_win = er_set_addr_win,
 	},
 };
 
